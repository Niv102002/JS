Arrays

PROGRAM 1 : WAP to accept a number from user in main() and store its multiplication values in the array using function. NOTE: use function - table, display.

#include <stdio.h>

void mul(int [],int);
void display (int []);

int main()
{
	int num, table[11];
	printf("Enter number : ");
	scanf("%d",&num);
	printf("Multiplication table of number %d is ",num);
	mul(table,num);
	display (table);
	return 0;
}

void mul(int table[],int num)
{
	for (int i=0;i<=11;i++)
	{
		table[i]=num*(i+1);
	}
}

void display (int table[])
{
	for (int i=0;i<10;i++)
	{
		printf("%d ",table[i]);
	}
}





PROGRAM 2 : WAP using array to store alphabets A-Z and display values on screen.

#include <stdio.h>

void alpha(char []);
void display (char []);

int main()
{
	char alphabets[26];
	printf("Alphabets are : ");
	alpha(alphabets);
	display (alphabets);
	return 0;
}

void alpha(char alphabets[])
{
	for(int i=65,j=0;i<=90;i++,j++)
	{
		alphabets[j]=i;
	}
}

void display (char alphabets[])
{
	for (int i=0;i<=25;i++)
	{
		printf("%c ",alphabets[i]);
	}
	printf("\n");
}





PROGRAM 3 : WAP to Store factorial of numbers 2-7 in array. Use functions: factorial, display.

#include <stdio.h>

int fact(int);
void display (int []);

int main()
{
	int factorial[6];
	printf("Factorial of numbers from 2 to 7 are : ");
	for (int i=2,k=0;i<=7;i++,k++)
	{
		factorial[k]=fact(i);
	}
	display (factorial);
	return 0;
}

int fact(int i)
{
	
		int result = 1;
		for (int j=i;j>0;j--)
		{
			result = j*result;
		}
		return result;
}

void display (int factorial[])
{
	for (int i=0;i<=5;i++)
	{
		printf("%d ",factorial[i]);
	}
}





PROGRAM 4 : WAP to accept 10 values for an array and find max number from array.

array 4 



#include <stdio.h>

int getvalue(int []);
int max(int []);
int display (int);

int main()
{
	int values[10],max_num;
	getvalue(values);
	max_num = max(values);
	printf("Maximum of given number is : ");
	display (max_num);
	return 0;
}

int getvalue(int values[])
{
	printf("Enter values : ");
	for (int i=0;i<10;i++)
	{
		scanf("%d",&values[i]);
	}
}

int max(int values[])
{
	int i;
	int max=0;
	for(i=0;i<10;i++)
	{
	    if (max>values[i])
	    {
	        continue;
	        //i++;
	    }
	    else
	    {
	        max = values[i];
	        continue;
	    }
	}
	return max;
}

int display(int max )
{
		printf("%d \n",max);
}





PROGRAM 5 : WAP using array to accept 5 numbers from user and find prime number from the array. Use function: accept, display, check_prime.

#include<stdio.h>

int accept(int *);
void display(int []);
int prime(int []);

int main()
{
	int array[5];
	
	printf("Enter 5 elements of an array : ");
	accept(array);
	
	printf("Array : ");
	display(array);
	
	printf("Prime numbers are : ");
	prime(array);
	
	return 0;
}

int accept(int *array)
{
    for (int i=0;i<5;i++)
    {
        scanf("%d",&array[i]);
    }
}

void display(int array[])
{
    for (int i=0;i<5;i++)
    {
        printf("%d ",array[i]);
    }
    printf("\n");
}

int prime(int array[])
{
	int flag=0;
	
	for (int i=0;i<5;i++)
    {
        for (int j=2;j<array[i];j++)
        {
            if (array[i]%j==0)
            {
                flag=1;
                break;
            }
            else
            {
                flag=0;
            }
        }
        if(flag==0)
        {
            printf("%d ",array[i]);
        }
    }
}





PROGRAM 6 : Write a program using function to reverse an array.

#include<stdio.h>

int accept(int *);
void display(int []);
int reverse(int []);

int main()
{
	int array[10];
	
	printf("Enter 10 elements of an array : ");
	accept(array);
	
	printf("Array : ");
	display(array);
	
	reverse(array);
	
	return 0;
}

int accept(int *array)
{
    for (int i=0;i<10;i++)
    {
        scanf("%d",&array[i]);
    }
}

void display(int array[])
{
    for (int i=0;i<10;i++)
    {
        printf("%d ",array[i]);
    }
    printf("\n");
}

int reverse(int array[])
{
	int temp,start=0,end=9;
	while (start<end)
	{
		temp=array[start];
		array[start]=array[end];
		array[end]=temp;
		start++;
		end--;
	}
	printf("Reversed Array : ");
	for (int i=0;i<10;i++)
    {
        printf("%d ",array[i]);
    }
}




------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Strings

PROGRAM 1 : Write a menu driven program for calculating length of strings, copy string, concatenate string, compare two strings, reverse original string. (without library functions)

#include<stdio.h>

char length(char[],char[]);
char copy(char[],char[]);
char concat(char[],char[]);
char compare(char[],char[]);
char reverse(char[],char[]);

int main()
{
	char str1[50],str2[50];
	int val;
	printf("Enter strings : ");
	scanf("%s %s",str1,str2);
	
	printf("String 1 = %s  \n String 2 = %s \n",str1,str2);
	printf("Enter the operation to be performed : 1-Length  2-Copy  3-Concatenate  4-Compare  5-Reverse : \n");
	scanf("%d",&val);
	
	switch(val)
	{
		case 1:
			length(str1,str2);
			break;
			
		case 2:
			copy(str1,str2);
			break;
			
		case 3:
			concat(str1,str2);
			break;
			
		case 4:
			compare(str1,str2);
			break;
			
		case 5:
			reverse(str1,str2);
			break;
			
		default:
			printf("Enter valid case !!");
			break;
	}
	return 0;
}


char length(char str1[],char str2[])
{
	int i,j;
	for(i=0;str1[i]!='\0';i++);
	printf("Length of String 1 = %d \n", i);
	
	for(j=0;str2[j]!='\0';j++);
	printf("Length of String 2 = %d \n", j);
}

char copy(char str1[],char str2[])
{
	int i;
	for(i=0; str2[i]!='\0';i++)
	{
		str1[i]=str2[i];
	} 
	str1[i]='\0';
	printf("Value of string 1 after copying : %s \n", str1);
}

char concat(char str1[],char str2[])
{ 	
	int j=0,i;
	for(i=0; str1[i]!='\0';i++);
	while(str2[j]!='\0')
	{
		str1[i]=str2[j];
		i++;
		j++;
	} 
	str1[i]='\0';
	printf("Value of string 1 after concatenation : %s \n", str1);
}

char compare(char str1[],char str2[])
{
	for (int i=0;str1[i]!='\0';i++)
	{
		if (str1[i]==str2[i])
			continue;
		else
			printf("strings are not equal \n");
			return 0;
	}
	printf("strings are equal \n");
}

char reverse(char str1[],char str2[])
{
	char temp1,temp2;
	int l;
	
	for(l=0; str1[l]!='\0';l++);
	for (int i=0;i<l;i++)
	{
		temp1=str1[l-1];
		str1[l-1]=str1[i];
		str1[i]=temp1;
		l--;
	}
	printf("Reversed string 1 : %s \n",str1);
	
	for(l=0; str2[l]!='\0';l++);
	for (int i=0;i<l;i++)
	{
		temp2=str2[l-1];
		str2[l-1]=str2[i];
		str2[i]=temp2;
		l--;
	}
	printf("Reversed string 2 : %s \n",str2);
}





PROGRAM 2 : Accept a string from user and count no. of spaces in it.

#include<stdio.h>

int calculate(char[]);

int main()
{
	char str[100];
	printf("Enter string : ");
	gets(str);
	printf("String = %s  \n",str);
	printf("Number of spaces in string : %d",calculate(str));
	return 0;
} 


int calculate(char str[])
{
	int i,count=0,l;
	for(l=0;str[l]!='\0';l++);
	for(i=0;i<l;i++)
	{
		if (str[i]==' ')
			count+=1;
	}
	return count;
}





PROGRAM 3 : WAP to accept a string from user and count vowels in the string and display the count

e.g.: Hello
a = 0	A = 0
e = 1	E = 0
i = 0	I = 0
o = 1	O = 0
u = 0	U = 0

#include<stdio.h>

int calculate(char[]);

int main()
{
	char str[100];
	printf("Enter string : ");
	scanf("%s",str);
	printf("String = %s  \n",str);
	calculate(str);
	return 0;
} 


int calculate(char str[])
{
	int i,j;
	int counts[5] = {0,0,0,0,0};
	int countc[5] = {0,0,0,0,0};
	char vowels_s[5] = {'a','e','i','o','u'};
	char vowels_c[5] = {'A','E','I','O','U'};
	
	for(i=0;str[i]!='\0';i++)
	{       
    	    if (str[i]>=97 && str[i]<=122)
    	    {
	    	    for(j=0;j<5;j++)
    		    {
		    	    if (str[i]==vowels_s[j])
		    	    {
		    	    	counts[j]+=1;
		    	    }
	    	    }
    	    }
    	    
    	    if (str[i]>=65 && str[i]<=90)
    	    {
	    	    for(j=0;j<5;j++)
    		    {
		    	    if (str[i]==vowels_c[j])
		    	    {
		    	    	countc[j]+=1;
		    	    }
	    	     }
      	    }
    }
    for(i=0;i<5;i++)
    {
        printf("%c = %d    %c=%d \n",vowels_c[i],countc[i],vowels_s[i],counts[i]);
    }
}





PROGRAM 4 : Accept string from user and toggle all characters from string. 

toggle

#include<stdio.h>

int toggle(char[]);

int main()
{
	char str[100];
	printf("Enter string : ");
	scanf("%s",str);
	
	printf("String = %s  \n",str);
	toggle(str);
	return 0;
} 

int toggle(char str[])
{
	char alphabets_s[26],alphabets_c[26];
	for(int i=0,m=65,n=97;i<26;i++,m++,n++)
	{	
		alphabets_c[i]=m;
		alphabets_s[i]=n;
	}
	
	int i,j;
	for(i=0;str[i]!='\0';i++)
	{
	    if(str[i]>=65 && str[i]<=90)
	    {
	        for(j=0;j<26;j++)
	        {
    	        if(str[i]==alphabets_c[j])
    	        {
    	            str[i]=alphabets_s[j];
    	        }
	        }
	    }
	    else
	    {
    	    for(j=0;j<26;j++)
	        {
	            if(str[i]==alphabets_s[j])
                {
                    str[i]=alphabets_c[j];
                }
	        }
	    }
	}
	
	printf("Toggled String : %s",str);
}





PROGRAM 5 : Accept a string from user and display count of all alphabets A-Z and a-z

eg: Apple

A = 1	a = 0
B = 0	b = 0
--------------
E = 0	e = 1
--------------
P = 0	p = 2

#include<stdio.h>

int calculate(char[]);

int main()
{
	char str[100];
	printf("Enter string : ");
	scanf("%s",str);
	
	printf("String = %s  \n",str);
	calculate(str);
	return 0;
} 

int calculate(char str[])
{
	char alphabets_s[26],alphabets_c[26];
	for(int i=0,m=65,n=97;i<26;i++,m++,n++)
	{	
		alphabets_c[i]=m;
		alphabets_s[i]=n;
	}
	
	int i,j;
	int counts[26],countc[26];
	for(i=0;i<26;i++)
	{
	    counts[i]=0;
	    countc[i]=0;
	}
	
	for(i=0;str[i]!='\0';i++)
	{       
    	    if (str[i]>=97 && str[i]<=122)
    	    {
	    	    for(j=0;j<26;j++)
    		    {
    		        //counts[j]=0;
		    	    if (str[i]==alphabets_s[j])
		    	    {
		    	    	counts[j]+=1;
		    	    }
	    	    }
    	    }
    	    
    	    if (str[i]>=65 && str[i]<=90)
    	    {
	    	    for(j=0;j<26;j++)
    		    { 
    		        //countc[i]=0;
		    	    if (str[i]==alphabets_c[j])
		    	    {
		    	    	countc[j]+=1;
		    	    }
	    	     }
      	    }
    }
    for(i=0;i<26;i++)
    {
        printf("%c = %d    %c=%d \n",alphabets_c[i],countc[i],alphabets_s[i],counts[i]);
    }
}